/** Czyszczenie schematu
Procedura usuwujaca tabele, jeśli istnieją 
*/

DECLARE
    v_count  INT;
    v_name VARCHAR2(20);
    TYPE namesarray IS VARRAY(15) OF VARCHAR2(20);
    names    namesarray;
BEGIN
    names := namesarray('students', 'student_course', 'courses', 'majors', 'major_course', 'faculties', 'lecturers', 'student_course_grade');

    FOR i IN 1..names.count LOOP
        v_name := names(i);
        
        SELECT COUNT(*) INTO v_count FROM user_tables WHERE table_name = upper(v_name);
        IF v_count = 1 THEN
            DBMS_OUTPUT.PUT_LINE('Dropping table: ' || v_name);
            EXECUTE IMMEDIATE 'DROP TABLE '|| v_name || ' CASCADE CONSTRAINTS';
        END IF;
    END LOOP;
END;

/

CREATE TABLE faculties
(
    faculty_id NUMBER (4) GENERATED BY DEFAULT ON NULL AS IDENTITY START WITH 1 CONSTRAINT faculty_PK PRIMARY KEY,
    name VARCHAR2 (40) NOT NULL
);

CREATE TABLE lecturers
(
    lecturer_id NUMBER (4) GENERATED BY DEFAULT ON NULL AS IDENTITY START WITH 1 CONSTRAINT lecturer_PK PRIMARY KEY,
    name VARCHAR2 (40) NOT NULL,
    surname VARCHAR2 (40) NOT NULL
);

CREATE TABLE majors
(
    major_id NUMBER (4) GENERATED BY DEFAULT ON NULL AS IDENTITY START WITH 1 CONSTRAINT major_PK PRIMARY KEY,
    name VARCHAR2 (40) NOT NULL,
    faculty_id NUMBER CONSTRAINT major_faculty_fk REFERENCES faculties(faculty_id)
);

CREATE TABLE students
(
    student_id NUMBER (4) GENERATED BY DEFAULT ON NULL AS IDENTITY START WITH 1 CONSTRAINT student_PK PRIMARY KEY,
    name VARCHAR2 (40) NOT NULL,
    surname VARCHAR2 (40) NOT NULL,
    pesel NUMBER (11) NOT NULL,
    major_id NUMBER CONSTRAINT student_major_fk REFERENCES majors(major_id)
);

